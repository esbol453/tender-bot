import requests
from bs4 import BeautifulSoup
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "7008967829:AAHIcif9vD-j1gxYPGbQ5X7UY-0s2W3dqnk"

# –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≥–æ—Å–∑–∞–∫—É–ø–æ–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
def parse_tenders():
    tenders = []
    base_url = "https://goszakup.gov.kz/ru/search/lots"
    params = {
        "filter[method][]": "3",  # –ó–∞–ø—Ä–æ—Å —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        "filter[status][]": "240",  # –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω (–ø—Ä–∏–µ–º —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)
        "filter[kato]": "470000000",  # –ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
        "filter[amount_to]": "1000000",  # –°—É–º–º–∞ –¥–æ 1 –º–ª–Ω
        "filter[trade_type]": "–¢–æ–≤–∞—Ä",  # –ü—Ä–µ–¥–º–µ—Ç –∑–∞–∫—É–ø–∫–∏ –¢–æ–≤–∞—Ä
        "page": 1
    }

    while True:
        print(f"–ü–∞—Ä—Å–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É {params['page']}...")
        response = requests.get(base_url, params=params)
        if response.status_code != 200:
            break
        soup = BeautifulSoup(response.text, "html.parser")
        rows = soup.select("table.table > tbody > tr")

        if not rows:
            break

        for row in rows:
            cols = row.find_all("td")
            if len(cols) < 7:
                continue

            # –î–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–æ–≤
            lot_number = cols[0].get_text(strip=True)
            name_desc = cols[1].get_text(strip=True)
            quantity = cols[3].get_text(strip=True)
            amount = cols[4].get_text(strip=True)
            method = cols[5].get_text(strip=True)
            status = cols[6].get_text(strip=True)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è (–µ—Å–ª–∏ –Ω–∞–¥–æ - –º–æ–∂–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–µ–µ)
            if method == "–ó–∞–ø—Ä–æ—Å —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π" and "–ø—Ä–∏–µ–º —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π" in status.lower():
                tender_text = (
                    f"üîπ {name_desc}\n"
                    f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}\n"
                    f"–°—É–º–º–∞: {amount} —Ç–≥\n"
                    f"–°—Ç–∞—Ç—É—Å: {status}\n"
                )
                tenders.append(tender_text)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        next_button = soup.select_one("ul.pagination > li.page-item.next:not(.disabled)")
        if next_button:
            params["page"] += 1
        else:
            break

    return tenders

# –ö–æ–º–∞–Ω–¥–∞ /goszakup –¥–ª—è –±–æ—Ç–∞
async def goszakup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ò—â—É —Ç–µ–Ω–¥–µ—Ä—ã...")

    tenders = parse_tenders()
    if not tenders:
        await update.message.reply_text("[–ì–æ—Å–∑–∞–∫—É–ø] –ù–æ–≤—ã—Ö —Ç–µ–Ω–¥–µ—Ä–æ–≤ –Ω–µ—Ç.")
    else:
        for tender in tenders:
            await update.message.reply_text(tender)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("goszakup", goszakup))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
